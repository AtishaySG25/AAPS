library(ggplot2)
library(dplyr)
library(HSAUR)
library(ggcorrplot)
# Load California housing data
file = 'Data/SaratogaHouses.csv'
hData = read.csv(file, header = TRUE, stringsAsFactors = FALSE)
# Load California housing data
file = 'D:/AAPS/Codes/Data/SaratogaHouses.csv'
hData = read.csv(file, header = TRUE, stringsAsFactors = FALSE)
hData = hData %>%
# Load California housing data
file = 'D:/AAPS/Codes/Data/SaratogaHouses.csv'
# Load California housing data
file = 'D:/AAPS/Codes/Data/SaratogaHouses.csv'
hData = read.csv(file, header = TRUE, stringsAsFactors = FALSE)
#hData = hData %>%
# Convert heating column to factor type
hData['heating'] =
str(hData)
ncols(hdata)
hdata(hdata)
library(ggplot2)
library(dplyr)
library(HSAUR)
library(ggcorrplot)
# Load California housing data
file = 'D:/AAPS/Codes/Data/SaratogaHouses.csv'
hData = read.csv(file, header = TRUE, stringsAsFactors = FALSE)
#hData = hData %>%
len(hdata)
len(hdata)
# Load California housing data
file = 'D:/AAPS/Codes/Data/SaratogaHouses.csv'
hData = read.csv(file, header = TRUE, stringsAsFactors = FALSE)
hData = hData %>% select(c(price, livingArea, heating))
str(hData)
# Convert heating column to factor type
hData['heating'] = lapply(hData['heating'], factor)
str(hData)
# Make a histogram between price values
p = ggplot(data = ) +
geom_histogram(aes(x = price , y = ..count..), breaks = seq(mean(hData$price)-4*sd(hData$price), mean(hData$price)+4*sd(hData$price), by = 20000), color = 'black', fill = 'blue') +
labs(x = 'Price', y = 'Frequency')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
p
# Make a histogram between price values
p = ggplot(data = ) +
geom_histogram(aes(x = price , y = after_stat(count)), breaks = seq(mean(hData$price)-4*sd(hData$price), mean(hData$price)+4*sd(hData$price), by = 20000), color = 'black', fill = 'blue') +
labs(x = 'Price', y = 'Frequency')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
p
# Make a histogram between price values
p = ggplot(data = ) +
geom_histogram(aes(x = 'price' , y = after_stat(count)), breaks = seq(mean(hData$price)-4*sd(hData$price), mean(hData$price)+4*sd(hData$price), by = 20000), color = 'black', fill = 'blue') +
labs(x = 'Price', y = 'Frequency')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
p
# Make a histogram between price values
p = ggplot(data = ) +
geom_histogram(aes(x = 'price' , y = after_stat(..count..)), breaks = seq(mean(hData$price)-4*sd(hData$price), mean(hData$price)+4*sd(hData$price), by = 20000), color = 'black', fill = 'blue') +
labs(x = 'Price', y = 'Frequency')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
p
# Make a histogram between price values
p = ggplot(data = hData) +
geom_histogram(aes(x = as.numeric(price), y = after_stat(..count..)),
breaks = seq(mean(hData$price) - 4 * sd(hData$price),
mean(hData$price) + 4 * sd(hData$price),
by = 20000),
color = 'black', fill = 'blue') +
labs(x = 'Price', y = 'Frequency')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
p
# Make a histogram between price values
p = ggplot(data = hData) +
geom_histogram(aes(x = as.numeric(price), y = after_stat(..count..)),
breaks = seq(mean(hData$price) - 4 * sd(hData$price),
mean(hData$price) + 4 * sd(hData$price),
by = 25000),
color = 'black', fill = 'blue') +
labs(x = 'Price', y = 'Frequency')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
p
median_price <- median(hData$price)
median_price
mea_price <- mean(hData$price)
mea_price
hData %>% filter(price > median_price)
median(hData$price)
hData %>% filter(price > median_price)
median(hData$price)
hData %>% filter(price > median_price)
nrow(hData %>% filter(price > median_price))
nrow(hData %>% filter(price < median_price))
nrow(hData %>% filter(price <= median_price))
nrow(hData %>% filter(price <= median(hData$price))) / nrow(hData)
scale(hData%price))
scale(hData$price))
scale(hData$price)
hist(scale(hData$price))
# Make a scatter plot between price and livingArea
p = ggplot(data = hData) +
geom_point(aes(x = livingArea, y = price)) +
labs(x = 'Living Area (square feet)', y = 'Price (US dollars)')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
p
# Make a box plot between price and livingArea
p = ggplot(data = hData) +
geom_boxplot(aes(x = heating, y = price)) +
labs(x = 'Heating', y = 'Price (US dollars)')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
p
hData %>% filter(heating == 'hot air') %>% select(price)
hData %>% filter(heating == 'hot air')
hData %>% filter(heating == 'hot air') %>% select(price)
hist(hData %>% filter(heating == 'hot air') %>% select(price))
hist(hData %>% filter(heating == 'hot air') %>% select(price))
hist(hData %>% filter(heating == as.numeric('hot air')) %>% select(price))
hData %>% filter(heating == 'hot air') %>% select(price)
hist((hData %>% filter(heating == 'hot air') %>% select(price))$price)
# Make a box plot between price and livingArea
p = ggplot(data = hData) +
geom_barplot(aes(x = heating, y = after_stat(..count..))) +
labs(x = 'Heating', y = 'Price (US dollars)')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
# Make a box plot between price and livingArea
p = ggplot(data = hData) +
geom_bar(aes(x = heating, y = after_stat(..count..))) +
labs(x = 'Heating', y = 'Price (US dollars)')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
# Make a box plot between price and livingArea
p = ggplot(data = hData) +
geom_boxplot(aes(x = heating, y = price),  color = 'black', fill = 'blue') +
labs(x = 'Heating', y = 'Price (US dollars)')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
p
# Make a box plot between price and livingArea
p = ggplot(data = hData) +
geom_bar(aes(x = heating, y = after_stat(..count..)), color = 'black', fill = 'blue') +
labs(x = 'Heating', y = 'Price (US dollars)')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
# Make a box plot between price and livingArea
p = ggplot(data = hData) +
geom_bar(aes(x = heating, y = after_stat(..count..)), color = 'black', fill = 'blue') +
labs(x = 'Heating', y = 'Price (US dollars)')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
p
# Make a box plot between price and livingArea
p = ggplot(data = hData) +
geom_bar(aes(x = heating, y = after_stat(..count.. / sum(..count..))), color = 'black', fill = 'blue') +
labs(x = 'Heating', y = 'Price (US dollars)')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
p
# Make a box plot between price and livingArea
p = ggplot(data = hData) +
geom_bar(aes(x = heating, y = after_stat(..count.. / sum(..count..) * 100)), color = 'black', fill = 'blue') +
labs(x = 'Heating', y = 'Price (US dollars)')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
p
